name: Build Wheels

on:
  push:
    branches:
      - main
      - feature/*
  workflow_dispatch:
  pull_request:
    branches-ignore:
      - docs
    paths-ignore:
      - 'docs/**'

concurrency:
  group: wheel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.config.os }} - ${{matrix.python-build}}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            shell: bash
          - os: macos-13
            shell: bash
          - os: windows-2022
            preamble: call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64
            shell: cmd
          # Prefixes for the platform build strings provided to
          # cibuildwheel. The remainder of the string, including
          # wildcard, is appended when used below. We only specify the
          # prefix here so that it can also be used in the file name of
          # the uploaded archive (i.e. wildcard `*` is not allowed).
          # See https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
        python-build: ['cp310', 'cp311']
    defaults:
      run:
        # Annoyingly required here since `matrix` isn't available in the
        # `shell` property of individual steps.
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v5

      - name: Bootstrap
        uses: ./.github/bootstrap_platform

      - name: Build wheels
        run: |
          ${{ matrix.config.preamble }}
          pip install cibuildwheel==2.11.1
          cibuildwheel --output-dir wheelhouse src/openassetio-python
        env:
          # Windows + Mac runs use this environment variable, as they
          # execute directly on the runner. Linux runs are somewhat
          # different, and are containerised fully, therefore they get
          # their toolchain path from pyproject.toml
          CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/.conan/conan_paths.cmake
          # We matrix the python build here ourselves, rather than
          # letting cibuildwheel do its regular python matrix, as we
          # want to allow a full release pipeline to run "vertically" on
          # CI, on individual agents, rather than building every python
          # version sequentially on each platform. This is done less for
          # performance reasons (although it does help) and more so a
          # single failing python version won't interrupt every other
          # deploy on that platform.
          CIBW_BUILD: ${{ matrix.python-build }}*64
          CIBW_SKIP: '*musllinux* *arm64*'
          # manylinux_2_28 is based on AlmaLinux 8, which uses glibc
          # 2.28 and new libstdc++ ABI.
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          PIP_VERBOSE: 1
          # VFX Reference Platform CY23-CY24
          MACOSX_DEPLOYMENT_TARGET: 11
          # Ensure .pyi stub tests won't be skipped
          OPENASSETIO_TEST_ENABLE_PYTHON_STUBGEN: 1

      - uses: actions/upload-artifact@v4
        with:
          name: "openassetio-wheels-${{ matrix.config.os }}-${{ matrix.python-build }}"
          path: ./wheelhouse/*.whl
