# A simple workflow that runs the documented build steps work.

name: Build Instructions
on:
  pull_request:
    branches-ignore:
      - docs
    paths-ignore:
      - 'docs/**'

jobs:

  aswf-docker:
    name: CY2022
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build, install and test (Docker)
      # Note: this _must_ be kept in sync with README.md until we
      # have an established mechanism to test doc-included code.
      run: |
        docker run -v `pwd`:/src aswf/ci-base:2022.2 bash -c '
          cd /src && \
          cmake -S . -B build && \
          cmake --build build && \
          cmake --install build'

  pip_install:
    name: Pip install on  ${{ matrix.os.id }}
    runs-on: ${{ matrix.os.id }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - id: windows-2019
            preamble: call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
            shell: cmd
          - id: ubuntu-20.04
            preamble: ""
            shell: bash
        # Temporarily disabling macOS CI due to pybind issue, see:
        #   https://github.com/conan-io/conan-center-index/pull/11075
        # - os: macos-10.15
    defaults:
      run:
        shell: ${{ matrix.os.shell }}
    steps:
    - uses: actions/checkout@v2

    - name: Bootstrap
      uses: ./.github/bootstrap_platform

    - name: Install using pip
      run: |
        ${{ matrix.os.preamble }}
        pip install .
      env:
        CMAKE_TOOLCHAIN_FILE: ~/conan/conan_paths.cmake

    - name: Install test dependencies
      run: pip install -r tests/python/requirements.txt

    - name: Run Python tests
      run: pytest tests/python/openassetio
