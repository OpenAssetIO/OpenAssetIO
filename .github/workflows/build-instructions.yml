# A simple workflow that runs the documented build steps work.

# Note: Commands in this workflow _must_ be kept in sync with README.md
# until we have an established mechanism to test doc-included code.

name: Build Instructions
on:
  pull_request:
    branches-ignore:
      - docs
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  aswf-docker:
    name: CY2022
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build and install (Docker)
      run: |
        docker run -v `pwd`:/src ghcr.io/openassetio/openassetio-build bash -c '
          cd /src && \
          cmake -S . -B build && \
          cmake --build build && \
          cmake --install build'

    - name: Build, install and test (Docker)
      run: |
        docker run -v `pwd`:/src ghcr.io/openassetio/openassetio-build bash -c '
          cd /src && \
          cmake -S . -B build -DOPENASSETIO_ENABLE_TESTS=ON && \
          ctest --test-dir build'

  pip_install:
    name: Pip install on  ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-2019
            preamble: call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64
            shell: cmd
          - os: ubuntu-20.04
            shell: bash
          - os: macos-11
            shell: bash
    defaults:
      run:
        # Annoyingly required here since `matrix` isn't available in
        # the `shell` property of individual steps.
        shell: ${{ matrix.config.shell }}

    steps:
    - uses: actions/checkout@v3

    - name: Bootstrap
      uses: ./.github/bootstrap_platform

    - name: Install using pip
      run: |
        ${{ matrix.config.preamble }}
        python -m pip install src/openassetio-python/package
      env:
        CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/.conan/conan_paths.cmake

    - name: Install test dependencies
      run: pip install -r src/openassetio-python/tests/requirements.txt

    - name: Run Python tests
      run: pytest src/openassetio-python/tests/package

  editable_pip_install:
    name: Editable pip install on  ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-2019
            preamble: call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\Build\\vcvarsall.bat" x64
            shell: cmd
          - os: ubuntu-20.04
            shell: bash
          - os: macos-11
            shell: bash
    defaults:
      run:
        # Annoyingly required here since `matrix` isn't available in
        # the `shell` property of individual steps.
        shell: ${{ matrix.config.shell }}

    steps:
    - uses: actions/checkout@v3

    - name: Bootstrap
      uses: ./.github/bootstrap_platform

    - name: Install using pip
      run: |
        ${{ matrix.config.preamble }}
        python -m pip install --editable src/openassetio-python/package
      env:
        CMAKE_TOOLCHAIN_FILE: ${{ github.workspace }}/.conan/conan_paths.cmake

    - name: Install test dependencies
      run: pip install -r src/openassetio-python/tests/requirements.txt

    - name: Run Python tests
      run: pytest src/openassetio-python/tests/package
