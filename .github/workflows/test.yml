# A simple workflow to run tests using pytest against supported Python versions

name: Tests
on:
  pull_request:
    branches-ignore:
      - docs
    paths-ignore:
      - 'docs/**'

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # We can't properly align to the VFX Reference Platform as this
        # requires glibc 2.17, which is older than any of the available
        # environments.
        os: [ubuntu-18.04, windows-2019, macos-11]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        # CY2022 (https://vfxplatform.com)
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r tests/requirements.txt

    - name: Build
      run: |
        python -m pip install .

    - name: Test
      # TODO(DF): Re-enable once CI work has been done.
      run: |
        echo "Skipping tests until CI build environment is configured"

  docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Test
      run: |
        echo "::add-matcher::./.github/workflows/problem-matchers/doxygen.json"
        # Problem matches don't actually error a step, so we have to
        # manually check for warnings/errors at the end. Capture the
        # output so we can parse it later.
        set -o pipefail
        make -C doc 2>&1 | tee doxygen-log.txt
        echo "::remove-matcher owner=doxygen::"
        # Fail the job if we have Doxygen warning/error lines in the
        # output. NB: This is the same regex as doxygen.json, adapted
        # to work with GNU grep.
        ! grep -qE "^.*?/src/[^:]+:[0-9]+: ?[a-zA-Z]+: ?.*$" doxygen-log.txt

  business-language:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    - name: Check business language
      run: |
        # Check that the acronym version of OpenAssetIO isn't in use
        # in the code base, see:
        #   https://github.com/TheFoundryVisionmongers/OpenAssetIO/issues/153
        # NB: The quotes deliberately avoid the string in question
        # appearing in this file, and failing the test.
        ! grep -ir "o""aio" .

